dist: bionic
language: rust
rust: nightly
cache: cargo
env: RUSTC_WRAPPER=$HOME/.local/bin/sccache
addons:
    apt:
        packages:
            - "python3-pip"
before_install:
    - pip install --user -r pb-jelly-gen/requirements.txt
    - python3 --version
    - python3 -m pip install mypy==0.782 mypy-protobuf==1.23
    - rustup component add rustfmt
    - PROTOBUF_VERSION=3.13.0
    - PROTOC_FILENAME=protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
    - wget https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/${PROTOC_FILENAME}
    - unzip $PROTOC_FILENAME -d $HOME/.local
    - SCCACHE_VERSION=0.2.13
    - SCCACHE_FILENAME=sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl
    - wget https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/${SCCACHE_FILENAME}.tar.gz
    - tar -xvf ${SCCACHE_FILENAME}.tar.gz
    - cp ${SCCACHE_FILENAME}/sccache ~/.local/bin
script:
    - set -e
    - protoc --version

    # Run mypy on codegen.py
    - cd pb-jelly-gen/codegen
    - protoc --mypy_out=proto rust/extensions.proto
    - mypy .
    - cd ../..

    # Rustfmt
    - for d in examples pb-jelly pb-jelly-gen pb-test; do cd $d ; cargo fmt -- --check ; cd .. ; done

    # unit tests
    - cd pb-jelly
    - cargo test
    - cd ../pb-jelly-gen
    - cargo test
    # pbtest
    - cd ../pb-test/pb_test_gen
    - cargo run
    - cd ..
    - VALIDATE=1 cargo test
    # examples
    - cd ../examples/examples_gen
    - cargo run
    - cd ..
    - cargo test
    # benchmarks
    - cd ../pb-test/pb_test_gen
    - cargo run --features=bench_prost,bench_rust_protobuf
    - cd ..
    - cargo bench bench --features=bench_prost,bench_rust_protobuf

    # Dump sccache stats
    - sccache --show-stats
